permissions:
  contents: write
name: Build
on: [push]
jobs:
  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: QtCacheTools-${{ runner.os }}-5.12.8
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with: 
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          modules: qtserialport qtquickcontrols2 
          tools: tools_ifw,4.6.0,qt.tools.ifw.46
      - name: git configure long path
        run: git config --global core.longpaths true
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Build
        run: |
          mkdir release
          cd release
          cmake ..\
          msbuild guitar-configurator.vcxproj /t:Build /p:Configuration=Release
        shell: cmd
      - name: Bundle
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo copy firmware
          mkdir deploy
          robocopy ".\firmware" ".\deploy\firmware" /e /njh /njs /ndl /nc /ns /nfl
          robocopy ".\binaries\win" ".\deploy\binaries" /e /njh /njs /ndl /nc /ns /nfl
          copy release\*.json deploy
          cp release\Release\guitar-configurator.exe deploy
          echo windeployqt
          windeployqt deploy\guitar-configurator.exe -qmldir=.
          echo copy data
          robocopy ".\deploy" ".\installer\packages\net.tangentmc.guitar_configurator\data" /e /njh /njs /ndl /nc /ns /nfl
          mkdir artifacts
          echo inst script
          powershell ".\installer\script.ps1"
          echo binarycreator
          ..\Qt\Tools\QtInstallerFramework\4.6\bin\binarycreator -c installer\config\config.xml -p installer\packages artifacts\guitar-configurator-win.exe -f
          echo repogen
          ..\Qt\Tools\QtInstallerFramework\4.6\bin\repogen -p installer\packages artifacts\repository
        shell: cmd
      - uses: actions/upload-artifact@v1
        with:
          name: windows
          path: artifacts
  release:
    if: contains(github.ref, 'tags/v')
    name: Release Build
    runs-on: ubuntu-latest
    # needs: [build-windows]
    needs: [build-windows]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v1
        with:
          name: windows
      - name: Append version to release
        run: |
          mv ./windows/*.exe ./windows/guitar-configurator-win-${GITHUB_REF##*/}.exe
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./windows/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cleanup windows directory for pages
        run: |
          rm ./windows/guitar-configurator-win-${GITHUB_REF##*/}.exe
      - uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          SINGLE_COMMIT: true
          CLEAN: true
          CLEAN_EXCLUDE: '["_includes","_layouts","_sass","assets","screenshots",".env",".gitignore","*.html","*.md","Gemfile","Gemfile.lock","_config.yml","adaptor.jpg"]'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: windows 
